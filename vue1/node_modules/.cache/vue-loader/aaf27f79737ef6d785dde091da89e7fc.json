{"remainingRequest":"D:\\Coding\\Practice3\\springboot-vue-demo-master (2)\\springboot-vue-demo-master\\vue1\\node_modules\\vue-loader-v16\\dist\\index.js??ref--0-1!D:\\Coding\\Practice3\\springboot-vue-demo-master (2)\\springboot-vue-demo-master\\vue1\\src\\views\\Category.vue?vue&type=style&index=0&id=4d5aa038&lang=css","dependencies":[{"path":"D:\\Coding\\Practice3\\springboot-vue-demo-master (2)\\springboot-vue-demo-master\\vue1\\src\\views\\Category.vue","mtime":1663494518000},{"path":"D:\\Coding\\Practice3\\springboot-vue-demo-master (2)\\springboot-vue-demo-master\\vue1\\node_modules\\css-loader\\dist\\cjs.js","mtime":1665989344882},{"path":"D:\\Coding\\Practice3\\springboot-vue-demo-master (2)\\springboot-vue-demo-master\\vue1\\node_modules\\vue-loader-v16\\dist\\stylePostLoader.js","mtime":1665989347196},{"path":"D:\\Coding\\Practice3\\springboot-vue-demo-master (2)\\springboot-vue-demo-master\\vue1\\node_modules\\postcss-loader\\src\\index.js","mtime":1665989345593},{"path":"D:\\Coding\\Practice3\\springboot-vue-demo-master (2)\\springboot-vue-demo-master\\vue1\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1665989344537},{"path":"D:\\Coding\\Practice3\\springboot-vue-demo-master (2)\\springboot-vue-demo-master\\vue1\\node_modules\\vue-loader-v16\\dist\\index.js","mtime":1665989346447}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ci5jdXN0b20tdHJlZS1ub2RlIHsKICBmbGV4OiAxOwogIGRpc3BsYXk6IGZsZXg7CiAgYWxpZ24taXRlbXM6IGNlbnRlcjsKICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47CiAgZm9udC1zaXplOiAxNHB4OwogIHBhZGRpbmctcmlnaHQ6IDhweDsKfQo="},{"version":3,"sources":["D:\\Coding\\Practice3\\springboot-vue-demo-master (2)\\springboot-vue-demo-master\\vue1\\src\\views\\Category.vue"],"names":[],"mappings":";AA+RA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;EAChB,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;EACP,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;EACb,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EACnB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EAC9B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;EACf,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;AACpB","file":"D:/Coding/Practice3/springboot-vue-demo-master (2)/springboot-vue-demo-master/vue1/src/views/Category.vue","sourceRoot":"","sourcesContent":["<template>\n  <div style=\"padding: 10px\">\n    <!--    功能区域-->\n<!--    <div style=\"margin: 10px 0\">-->\n<!--      <el-button type=\"primary\" @click=\"add\" v-if=\"user.role === 1\">新增</el-button>-->\n<!--    </div>-->\n\n    <!--    搜索区域-->\n<!--    <div style=\"margin: 10px 0\">-->\n<!--      <el-input v-model=\"search\" placeholder=\"请输入关键字\" style=\"width: 20%\" clearable></el-input>-->\n<!--      <el-button type=\"primary\" style=\"margin-left: 5px\" @click=\"load\">查询</el-button>-->\n<!--    </div>-->\n    <el-table\n        v-loading=\"loading\"\n        :data=\"tableData\"\n        border\n        stripe\n        style=\"width: 100%\"\n        row-key=\"id\"\n        default-expand-all\n    >\n<!--      <el-table-column-->\n<!--          prop=\"id\"-->\n<!--          label=\"ID\"-->\n<!--          sortable-->\n<!--      >-->\n<!--      </el-table-column>-->\n      <el-table-column\n          prop=\"name\"\n          label=\"名称\">\n      </el-table-column>\n      <el-table-column label=\"操作\">\n        <template #default=\"scope\">\n          <el-button size=\"mini\" @click=\"handleEdit(scope.row)\" v-if=\"user.role === 1\">编辑</el-button>\n          <el-popconfirm title=\"确定删除吗？\" @confirm=\"handleDelete(scope.row.id)\" v-if=\"user.role === 1\">\n            <template #reference>\n              <el-button size=\"mini\" type=\"danger\">删除</el-button>\n            </template>\n          </el-popconfirm>\n        </template>\n      </el-table-column>\n    </el-table>\n\n    <el-card style=\"margin: 10px 0; width: 50%\">\n      <div class=\"custom-tree-container\">\n        <el-tree :data=\"tableData\" :props=\"defaultProps\" show-checkbox\n                 @check-change=\"handleCheckChange\"\n                 node-key=\"id\"\n                 :default-expanded-keys=\"[1, 2]\"\n                 :default-checked-keys=\"checkedList\"\n        >\n          <template #default=\"{ node, data }\">\n        <span class=\"custom-tree-node\">\n          <span>{{ node.label }}</span>\n          <span>\n            <a\n                @click=\"remove(node, data)\">\n              Delete\n            </a>\n          </span>\n        </span>\n          </template>\n        </el-tree>\n      </div>\n    </el-card>\n\n    <el-card style=\"width: 50%\">\n      <el-cascader :options=\"options\" clearable @change=\"changeCas\" v-model=\"casdata\"></el-cascader>\n    </el-card>\n\n    <div style=\"margin: 10px 0\">\n      <el-dialog title=\"提示\" v-model=\"dialogVisible\" width=\"30%\">\n        <el-form :model=\"form\" label-width=\"120px\">\n          <el-form-item label=\"名称\">\n            <el-input v-model=\"form.name\" style=\"width: 80%\"></el-input>\n          </el-form-item>\n        </el-form>\n        <template #footer>\n          <span class=\"dialog-footer\">\n            <el-button @click=\"dialogVisible = false\">取 消</el-button>\n            <el-button type=\"primary\" @click=\"save\">确 定</el-button>\n          </span>\n        </template>\n      </el-dialog>\n\n    </div>\n  </div>\n</template>\n\n<script>\n\n\nimport request from \"@/utils/request\";\n\nexport default {\n  name: 'Category',\n  components: {\n\n  },\n  data() {\n    return {\n      user: {},\n      loading: true,\n      form: {},\n      dialogVisible: false,\n      search: '',\n      currentPage: 1,\n      pageSize: 10,\n      total: 0,\n      tableData: [],\n      casdata: ['Anhui', 'Hefei', 'Zhengwu'],\n      defaultProps: {\n        children: 'children',\n        label: 'name'\n      },\n      checkedList: [],\n      options: []\n    }\n  },\n\n// {\n//   value: 'Anhui',\n//       label: '安徽省',\n//     children: [\n//   {\n//     value: 'Hefei',\n//     label: '合肥市',\n//     children: [\n//       {\n//         value: 'Zhenwu',\n//         label: '政务区',\n//       },\n//     ],\n//   },\n//   {\n//     value: 'Wuhu',\n//     label: '芜湖市',\n//     children: [\n//       {\n//         value: 'Jinghu',\n//         label: '镜湖区',\n//       },\n//     ],\n//   }\n// ]\n// },\n// {\n//   value: 'Jiangsu',\n//       label: '江苏省',\n//     children: [\n//   {\n//     value: 'Nanjing',\n//     label: '南京市',\n//     children: [\n//       {\n//         value: 'Xuanwu',\n//         label: '玄武区',\n//       },\n//     ],\n//   }\n// ]\n// }\n  created() {\n    let userStr = sessionStorage.getItem(\"user\") || \"{}\"\n    this.user = JSON.parse(userStr)\n    // 请求服务端，确认当前登录用户的 合法信息\n    request.get(\"/user/\" + this.user.id).then(res => {\n      if (res.code === '0') {\n        this.user = res.data\n      }\n    })\n\n    request.get(\"/area/tree\").then(res => {\n      console.log(res.data)\n      this.options = res.data\n    })\n\n    this.load()\n  },\n  methods: {\n    changeCas(data) {\n      console.log(data)\n      console.log(this.casdata)\n    },\n    remove(node, data) {\n      request.delete(\"/category/\" + data.id).then(res => {\n        this.load()\n      })\n      // console.log(data)\n      // const parent = node.parent;\n      // const children = parent.data.children || parent.data;\n      // const index = children.findIndex(d => d.id === data.id);\n      // children.splice(index, 1);\n      // this.data = [...this.data]\n    },\n    handleCheckChange(data, checked, indeterminate) {\n      console.log(data.id);\n      console.log(data.name);\n    },\n    load() {\n      this.loading = true\n      request.get(\"/category\").then(res => {\n        this.loading = false\n        this.tableData = res.data\n\n        // 赋值选中的节点\n        let checkedData = [4];\n        this.checkedList = checkedData\n      })\n\n    },\n    add() {\n      this.dialogVisible = true\n      this.form = {}\n    },\n    save() {\n      if (this.form.id) {  // 更新\n        request.put(\"/category\", this.form).then(res => {\n          console.log(res)\n          if (res.code === '0') {\n            this.$message({\n              type: \"success\",\n              message: \"更新成功\"\n            })\n          } else {\n            this.$message({\n              type: \"error\",\n              message: res.msg\n            })\n          }\n          this.load() // 刷新表格的数据\n          this.dialogVisible = false  // 关闭弹窗\n        })\n      }  else {  // 新增\n        request.post(\"/category\", this.form).then(res => {\n          console.log(res)\n          if (res.code === '0') {\n            this.$message({\n              type: \"success\",\n              message: \"新增成功\"\n            })\n          } else {\n            this.$message({\n              type: \"error\",\n              message: res.msg\n            })\n          }\n\n          this.load() // 刷新表格的数据\n          this.dialogVisible = false  // 关闭弹窗\n        })\n      }\n    },\n    handleEdit(row) {\n      this.form = JSON.parse(JSON.stringify(row))\n      this.dialogVisible = true\n\n    },\n    handleDelete(id) {\n      console.log(id)\n      request.delete(\"/category/\" + id).then(res => {\n        if (res.code === '0') {\n          this.$message({\n            type: \"success\",\n            message: \"删除成功\"\n          })\n        } else {\n          this.$message({\n            type: \"error\",\n            message: res.msg\n          })\n        }\n        this.load()  // 删除之后重新加载表格的数据\n      })\n    },\n    handleSizeChange(pageSize) {   // 改变当前每页的个数触发\n      this.pageSize = pageSize\n      this.load()\n    },\n    handleCurrentChange(pageNum) {  // 改变当前页码触发\n      this.currentPage = pageNum\n      this.load()\n    }\n  }\n}\n</script>\n<style>\n.custom-tree-node {\n  flex: 1;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  font-size: 14px;\n  padding-right: 8px;\n}\n</style>\n"]}]}